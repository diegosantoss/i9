{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\projects\\\\personal\\\\i9\\\\pages\\\\[service].js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport BaseApp from '../components/BaseApp';\nimport Parser from 'html-react-parser';\n\nvar Service = function Service(_ref) {\n  _s();\n\n  var data = _ref.data;\n  var router = useRouter();\n  var service = data.services.options.filter(function (item) {\n    return item.slug === router.query.service;\n  })[0];\n  return __jsx(BaseApp, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, __jsx(\"section\", {\n    className: \"service_container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, __jsx(\"section\", {\n    className: \"service_image\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, __jsx(\"img\", {\n    width: \"1920\",\n    src: service.image,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 11\n    }\n  })), __jsx(\"section\", {\n    className: \"service_content\",\n    style: {\n      backgroundImage: \"url(\".concat(service.image, \")\")\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, __jsx(\"section\", {\n    className: \"container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 11\n    }\n  }, __jsx(\"section\", {\n    className: \"service_infos\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 15\n    }\n  }, service.title), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 15\n    }\n  }, Parser(service.text)))))));\n};\n\n_s(Service, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = Service;\nService.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  var res, data;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return fetch(\"\".concat(process.env.URL, \"/data.json\"));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return res.json();\n\n        case 5:\n          data = _context.sent;\n          return _context.abrupt(\"return\", {\n            data: data\n          });\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default Service;\n\nvar _c;\n\n$RefreshReg$(_c, \"Service\");","map":{"version":3,"sources":["C:/projects/personal/i9/pages/[service].js"],"names":["useRouter","BaseApp","Parser","Service","data","router","service","services","options","filter","item","slug","query","image","backgroundImage","title","text","getInitialProps","fetch","process","env","URL","res","json"],"mappings":";;;;;;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAAY;AAAA;;AAAA,MAAVC,IAAU,QAAVA,IAAU;AAC1B,MAAMC,MAAM,GAAGL,SAAS,EAAxB;AACA,MAAMM,OAAO,GAAGF,IAAI,CAACG,QAAL,CAAcC,OAAd,CAAsBC,MAAtB,CAA6B,UAAAC,IAAI;AAAA,WAAIA,IAAI,CAACC,IAAL,KAAcN,MAAM,CAACO,KAAP,CAAaN,OAA/B;AAAA,GAAjC,EAAyE,CAAzE,CAAhB;AAEA,SACE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAS,IAAA,SAAS,EAAC,mBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAS,IAAA,SAAS,EAAC,eAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,KAAK,EAAC,MAAX;AAAkB,IAAA,GAAG,EAAEA,OAAO,CAACO,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE;AAAS,IAAA,SAAS,EAAC,iBAAnB;AAAqC,IAAA,KAAK,EAAE;AAAEC,MAAAA,eAAe,gBAASR,OAAO,CAACO,KAAjB;AAAjB,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAS,IAAA,SAAS,EAAC,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAS,IAAA,SAAS,EAAC,eAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKP,OAAO,CAACS,KAAb,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIb,MAAM,CAACI,OAAO,CAACU,IAAT,CAAV,CAFF,CADF,CADF,CAJF,CADF,CADF;AAiBD,CArBD;;GAAMb,O;UACWH,S;;;KADXG,O;AAwBNA,OAAO,CAACc,eAAR,yEAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACNC,KAAK,WAAIC,OAAO,CAACC,GAAR,CAAYC,GAAhB,gBADC;;AAAA;AAClBC,UAAAA,GADkB;AAAA;AAAA,iBAELA,GAAG,CAACC,IAAJ,EAFK;;AAAA;AAElBnB,UAAAA,IAFkB;AAAA,2CAIjB;AACLA,YAAAA,IAAI,EAAJA;AADK,WAJiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA1B;AASA,eAAeD,OAAf","sourcesContent":["import { useRouter } from 'next/router';\r\nimport BaseApp from '../components/BaseApp';\r\nimport Parser from 'html-react-parser';\r\n\r\nconst Service = ({data}) => {\r\n  const router = useRouter();\r\n  const service = data.services.options.filter(item => item.slug === router.query.service)[0];\r\n\r\n  return (\r\n    <BaseApp>\r\n      <section className=\"service_container\">\r\n        <section className=\"service_image\">\r\n          <img width=\"1920\" src={service.image} />\r\n        </section>\r\n        <section className=\"service_content\" style={{ backgroundImage: `url(${service.image})` }}>\r\n          <section className=\"container\">\r\n            <section className=\"service_infos\">\r\n              <h1>{service.title}</h1>\r\n              <p>{Parser(service.text)}</p>\r\n            </section>\r\n          </section>\r\n        </section>\r\n      </section> \r\n    </BaseApp>\r\n  ) \r\n}\r\n\r\n\r\nService.getInitialProps = async function() {\r\n  const res = await fetch(`${process.env.URL}/data.json`);\r\n  const data = await res.json();\r\n\r\n  return {\r\n    data\r\n  }\r\n}\r\n\r\nexport default Service"]},"metadata":{},"sourceType":"module"}